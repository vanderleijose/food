version: "3.8"
services:
  app:
    build:
      args:
        user: ${APP_USER}
        uid: ${APP_UID}
      context: ./
      dockerfile: Dockerfile
    image: ${APP_NAME}
    env_file: .env
    environment:
      DB_HOST: ${MYSQL_HOST}
      DB_PORT: ${MYSQL_PORT}
      DB_DATABASE: ${MYSQL_DATABASE}
      DB_USERNAME: ${MYSQL_USERNAME}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      CI_ENVIRONMENT: ${CI_ENVIRONMENT}
      baseURL: ${baseURL}
    container_name: ${APP_NAME}-app
    restart: unless-stopped
    working_dir: /var/www/
    depends_on:
      - db
    volumes:
      - ./app:/var/www
      - ./.docker/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - app

  db:
    image: mysql:5.7
    env_file: .env
    container_name: ${APP_NAME}-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - 3307:${MYSQL_PORT}
    volumes:
      - ./db/mysql:/var/lib/mysql
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app

  nginx:
    image: nginx:1.17-alpine
    container_name: ${APP_NAME}-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    depends_on:
      - app
    volumes:
      - ./app:/var/www
      - ./.docker/nginx:/etc/nginx/conf.d
    networks:
      - app

networks:
  app:
    driver: bridge
